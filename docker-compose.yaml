version: '3.8'

services:
  mongodb:
    image: "mongo"

    # if we do not specify this it will name will be autogenerated
    container_name: mongodb
    volumes:
      - data:/data/db
    # env can be set in 2 ways directly here in file or in env file
    # environment:
    #    MONGO_INITDB_ROOT_USERNAME: aj
    #    MONGO_INITDB_ROOT_PASSWORD: secret
    env_file:
      - ./env/mongo.env
  # docker compose will by default will add all components to same network , 
  # if you want to add it yourseolf then example -
    # networks:
    #   - goals-network

  backend:
    build:
      context : ./backend
      dockerfile: Dockerfile
    ports:
      - '80:80'
    volumes:
      - logs:/app/logs
      #bind mount : realtive path in compose files
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./env/backend.env
    depends_on:
      - mongodb
    
      #args
        # someargs: value

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    #for interactive mode in frontend.
    stdin_open: true
    tty: true
    

# if we have named volumes in the services then they should be listed here.
# anonumours volumns and bind mounts not needed to be listed here.
volumes:
  data:
  logs: